package team2485.smartdashboard.extension;

import edu.wpi.first.smartdashboard.gui.*;
import edu.wpi.first.smartdashboard.properties.Property;
import edu.wpi.first.smartdashboard.types.DataType;
import java.awt.Color;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.border.*;

public class PotWidget extends Widget {
    public static final String NAME = "Pot Widget";
    public static final DataType[] TYPES = { DataType.STRING };
    
    private ImageIcon trueImage, falseImage;

    @Override
    public void init() {
        initComponents();

        try {
             this.trueImage = new ImageIcon(ImageIO.read(PandaboardIndicator.class.getResourceAsStream("/team2485/smartdashboard/extension/res/boolean-on.png")));
            this.falseImage = new ImageIcon(ImageIO.read(PandaboardIndicator.class.getResourceAsStream("/team2485/smartdashboard/extension/res/boolean-off.png")));
        } catch (IOException e) {
            System.err.println("Error loading pot widget boolean images.");
            e.printStackTrace();
        }

        this.readyDisplay.setIcon(this.falseImage);
    }

    @Override
    public void setValue(Object o) {
        final String[] vals = ((String)o).split(",");
        this.setPotState(vals[0]);
        this.setPotValue((int)Double.parseDouble(vals[1]));
        if (vals.length > 2) {
            this.setReadyState(Boolean.parseBoolean(vals[2]) ? 2 : 1);
        }
        else this.setReadyState(0);
    }

    @Override
    public void propertyChanged(Property prprt) {
    }

    private void setPotState(String potName) {
        labelText.setText(potName.toUpperCase() + "  ");
        
        Color fillColor;
        final String potLowerName = potName.toLowerCase();
        if (potLowerName.startsWith("manual"))
            fillColor = new Color(255, 153, 51);
        else if (potLowerName.startsWith("auto"))
            fillColor = new Color(169, 4, 255);
        else
            fillColor = new Color(9, 148, 2);
        
        this.innerPanel.setBackground(fillColor);
        this.labelText.setBackground(fillColor);
    }

    private void setPotValue(int potValue) {
        // TODO: does this fail with 4-digit numbers?
        this.valueText.setText(String.format("  %03d", potValue));
    }
    
    private void setReadyState(int ready) {
        switch (ready) {
            case 2:
                this.readyDisplay.setIcon(this.trueImage);
                break;
            case 1:
            case 0:
                this.readyDisplay.setIcon(this.falseImage);
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        readyDisplay = new javax.swing.JLabel();
        innerPanel = new javax.swing.JPanel();
        labelText = new javax.swing.JLabel();
        valueText = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(32767, 56));
        setMinimumSize(new java.awt.Dimension(303, 56));
        setPreferredSize(new java.awt.Dimension(303, 56));
        setLayout(new java.awt.BorderLayout());

        readyDisplay.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 0));
        readyDisplay.setMaximumSize(new java.awt.Dimension(50, 40));
        readyDisplay.setMinimumSize(new java.awt.Dimension(50, 40));
        readyDisplay.setPreferredSize(new java.awt.Dimension(50, 40));
        add(readyDisplay, java.awt.BorderLayout.EAST);
        readyDisplay.getAccessibleContext().setAccessibleName("");

        innerPanel.setBackground(new java.awt.Color(255, 153, 51));
        innerPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 3));
        innerPanel.setMaximumSize(new java.awt.Dimension(2147483647, 50));
        innerPanel.setMinimumSize(new java.awt.Dimension(300, 50));
        innerPanel.setPreferredSize(new java.awt.Dimension(300, 50));
        innerPanel.setLayout(new java.awt.BorderLayout());

        labelText.setBackground(new java.awt.Color(255, 153, 51));
        labelText.setFont(new java.awt.Font("BoomBox 2", 0, 18)); // NOI18N
        labelText.setForeground(new java.awt.Color(255, 255, 255));
        labelText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelText.setText("FEEDER  ");
        labelText.setOpaque(true);
        labelText.setPreferredSize(new java.awt.Dimension(200, 50));
        innerPanel.add(labelText, java.awt.BorderLayout.CENTER);

        valueText.setBackground(new java.awt.Color(255, 255, 255));
        valueText.setFont(new java.awt.Font("BoomBox 2", 0, 24)); // NOI18N
        valueText.setText("  000");
        valueText.setOpaque(true);
        valueText.setPreferredSize(new java.awt.Dimension(100, 50));
        innerPanel.add(valueText, java.awt.BorderLayout.EAST);

        add(innerPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel innerPanel;
    private javax.swing.JLabel labelText;
    private javax.swing.JLabel readyDisplay;
    private javax.swing.JLabel valueText;
    // End of variables declaration//GEN-END:variables
}
