package team2485.smartdashboard.extension.util;

import javax.swing.*;

/**
 * HSV Value Tuner
 * @author Bryce Matsumori
 */
public class HSVTuner extends JFrame {
    private HSVTunerChangeListener listener;

    /**
     * Construct a HSVTuner with the provided listener.
     * The maximum ranges are used for the default values.
     * @param listener The listener.
     */
    public HSVTuner(HSVTunerChangeListener listener) {
        this(listener, 0, 180, 0, 255, 0, 255);
    }

    /**
     * Construct a HSVTuner with the provided listener and default values.
     * @param callback The listener.
     * @param hMin hue min
     * @param hMax hue max
     * @param sMin saturation min
     * @param sMax saturation max
     * @param vMin vibrance min
     * @param vMax vibrance max
     */
    public HSVTuner(HSVTunerChangeListener callback, int hMin, int hMax, int sMin, int sMax, int vMin, int vMax) {
        this.listener = callback;

        initComponents();

        hMinSlider.setValue(hMin);
        hMaxSlider.setValue(hMax);
        sMinSlider.setValue(sMin);
        sMaxSlider.setValue(sMax);
        vMinSlider.setValue(vMin);
        vMaxSlider.setValue(vMax);

        setLocationRelativeTo(null);
    }

    /**
     * An interface for receiving value change events.
     */
    public interface HSVTunerChangeListener {
        public void hMinChanged(int newValue);
        public void hMaxChanged(int newValue);
        public void sMinChanged(int newValue);
        public void sMaxChanged(int newValue);
        public void vMinChanged(int newValue);
        public void vMaxChanged(int newValue);
    }

    /**
     * Set hue min
     * @param val The value
     */
    public void setHMin(int val) {
        hMinSlider.setValue(val);
    }

    /**
     * Set hue max
     * @param val The value
     */
    public void setHMax(int val) {
        hMaxSlider.setValue(val);
    }

    /**
     * Set saturation min
     * @param val The value
     */
    public void setSMin(int val) {
        sMinSlider.setValue(val);
    }

    /**
     * Set saturation max
     * @param val The value
     */
    public void setSMax(int val) {
        sMaxSlider.setValue(val);
    }

    /**
     * Set vibrance min
     * @param val The value
     */
    public void setVMin(int val) {
        vMinSlider.setValue(val);
    }

    /**
     * Set vibrance max
     * @param val The value
     */
    public void setVMax(int val) {
        vMaxSlider.setValue(val);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        hLabel = new javax.swing.JLabel();
        hMinSlider = new javax.swing.JSlider();
        hMaxSlider = new javax.swing.JSlider();
        sLabel = new javax.swing.JLabel();
        sMinSlider = new javax.swing.JSlider();
        sMaxSlider = new javax.swing.JSlider();
        vLabel = new javax.swing.JLabel();
        vMinSlider = new javax.swing.JSlider();
        vMaxSlider = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("HSV Tuner");
        setAlwaysOnTop(true);
        setMaximumSize(new java.awt.Dimension(2147483647, 70));
        setMinimumSize(new java.awt.Dimension(400, 70));
        setPreferredSize(new java.awt.Dimension(600, 70));
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {20, 0, 20, 0, 20, 0};
        layout.rowHeights = new int[] {30, 30};
        layout.columnWeights = new double[] {0.0, 33.3, 0.0, 33.3, 0.0, 33.3};
        layout.rowWeights = new double[] {50.0, 50.0};
        getContentPane().setLayout(layout);

        hLabel.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        hLabel.setText("H");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        getContentPane().add(hLabel, gridBagConstraints);

        hMinSlider.setMaximum(180);
        hMinSlider.setValue(0);
        hMinSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hMinSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(hMinSlider, gridBagConstraints);

        hMaxSlider.setMaximum(180);
        hMaxSlider.setValue(180);
        hMaxSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hMaxSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(hMaxSlider, gridBagConstraints);

        sLabel.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        sLabel.setText("S");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        getContentPane().add(sLabel, gridBagConstraints);

        sMinSlider.setMaximum(255);
        sMinSlider.setValue(0);
        sMinSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sMinSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(sMinSlider, gridBagConstraints);

        sMaxSlider.setMaximum(255);
        sMaxSlider.setToolTipText("");
        sMaxSlider.setValue(255);
        sMaxSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sMaxSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(sMaxSlider, gridBagConstraints);

        vLabel.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        vLabel.setText("V");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        getContentPane().add(vLabel, gridBagConstraints);

        vMinSlider.setMaximum(255);
        vMinSlider.setValue(0);
        vMinSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                vMinSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(vMinSlider, gridBagConstraints);

        vMaxSlider.setMaximum(255);
        vMaxSlider.setValue(255);
        vMaxSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                vMaxSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(vMaxSlider, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hMinSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hMinSliderStateChanged
        listener.hMinChanged(hMinSlider.getValue());
    }//GEN-LAST:event_hMinSliderStateChanged

    private void hMaxSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hMaxSliderStateChanged
        listener.hMaxChanged(hMaxSlider.getValue());
    }//GEN-LAST:event_hMaxSliderStateChanged

    private void sMinSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sMinSliderStateChanged
        listener.sMinChanged(sMinSlider.getValue());
    }//GEN-LAST:event_sMinSliderStateChanged

    private void sMaxSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sMaxSliderStateChanged
        listener.sMaxChanged(sMaxSlider.getValue());
    }//GEN-LAST:event_sMaxSliderStateChanged

    private void vMinSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_vMinSliderStateChanged
        listener.vMinChanged(vMinSlider.getValue());
    }//GEN-LAST:event_vMinSliderStateChanged

    private void vMaxSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_vMaxSliderStateChanged
        listener.vMaxChanged(vMaxSlider.getValue());
    }//GEN-LAST:event_vMaxSliderStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hLabel;
    private javax.swing.JSlider hMaxSlider;
    private javax.swing.JSlider hMinSlider;
    private javax.swing.JLabel sLabel;
    private javax.swing.JSlider sMaxSlider;
    private javax.swing.JSlider sMinSlider;
    private javax.swing.JLabel vLabel;
    private javax.swing.JSlider vMaxSlider;
    private javax.swing.JSlider vMinSlider;
    // End of variables declaration//GEN-END:variables
}
